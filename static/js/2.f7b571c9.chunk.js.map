{"version":3,"sources":["../node_modules/@iconify/react/dist/iconify.mjs"],"names":["matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIcon","dashSeparated","join","icon","match","getIconData$1","full","getIcon","iteration","_a","_b","_c","_d","icons","assign","aliases","item","result2","parent","alias","key","prop","mergeIconData","chars","matchChar","validateIconProps","fix","attr","type","parseIconSet","callback","options","names","obj","Error","keys","forEach","body","validateAlias","validatedAliases","has","failedAliases","add","Set","expectedType","actualType","char","target","validateIconSet","err","not_found","Array","push","iconData","parseAliases","isVariation","storage$1","create","getStorage","providerStorage","missing","newStorage","addIconSet","storage2","t","Date","now","simpleNames","allowSimpleNames","allow","getIconData","getIconFromStorage","addIcon","addIconToStorage","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","tempValue","rotation","floor","unshift","attributes","viewBox","regex","randomPrefix","toString","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","storage","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","concat","mergeParams","base","params","hasParams","indexOf","encodeURIComponent","paramToString","maxLengthCache","pathCache","fetchModule","fetch","chunk","String","fromCharCode","req","global","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","cacheKey","calculateMaxLength","send","status","done","getPath","iconsList","uri","defaultError","then","response","json","setTimeout","catch","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","idCounter","defaultConfig","sendQuery","payload","query","success","resourcesCount","startIndex","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","execNext","resource","timeout2","error","isError","queued","moduleResponse","initRedundancy","cfg","newConfig","setConfig","queries","cleanup","queryCallback","doneCallback","query2","newIndex","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","redundancy","api","cached","cachedReundancy","getRedundancyCache","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","providerPendingUpdates","hasPending","oldLength","pending","loaded","updateCallbacks","errorsCache","loadNewIcons","providerIconsToLoad","providerQueueFlags","providerPendingIcons","sort","icons2","time","console","parsed","store","err2","loadIcons","cleanedIcons","listToIcons","sortedIcons","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingSources","bind","storeCallback","cacheVersion","cachePrefix","countKey","versionKey","hour","local","session","count","emptyList","_window","window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","loadCache","minTime","load","func","valid","JSON","parse","removeItem","version","i","destroyCache","initCache","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","svgDefaults","inlineDefaults","document","stringify","IconifyPreload","preload","added","addCollection","e","IconifyProviders","providers","IconComponent","React","Component","constructor","super","this","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","render","children","createElement","newProps","className","ref","defaultProps","style","componentProps","color","localCounter","dangerouslySetInnerHTML","__html","verticalAlign","_inline","_ref","Icon","forwardRef"],"mappings":"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","file":"static/js/2.f7b571c9.chunk.js","sourcesContent":["import React from 'react';\n\n// src/icon/index.ts\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\n// src/icon/name.ts\nvar stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\n// src/icon/merge.ts\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\n// src/icon-set/get-icon.ts\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\n// src/icon-set/validate.ts\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  const fix = !!(options == null ? void 0 : options.fix);\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (!Object.keys(data.icons).length) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      var _a;\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && ((_a = data.aliases) == null ? void 0 : _a[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\n// src/icon-set/parse.ts\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\n// src/storage/storage.ts\nvar storage$1 = Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\n// src/storage/functions.ts\nvar simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\n// src/customisations/index.ts\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/svg/size.ts\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n// src/builder/functions.ts\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\n// src/svg/id.ts\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId-\" + Date.now().toString(16) + \"-\" + (Math.random() * 16777216 | 0).toString(16) + \"-\";\nvar counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\n// src/api/modules.ts\nvar storage = Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n// src/api/config.ts\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nvar fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\n// src/api/params.ts\nvar mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\n// src/api/modules/fetch.ts\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\nvar detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  try {\n    const chunk = String.fromCharCode(114) + String.fromCharCode(101);\n    const req = global[chunk + \"qui\" + chunk];\n    callback = req(\"cross-fetch\");\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nvar fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nvar send = (host, params, status) => {\n  if (!fetchModule) {\n    status.done(void 0, 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      status.done(void 0, 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    if (response.status !== 200) {\n      setTimeout(() => {\n        status.done(void 0, response.status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        status.done(void 0, defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      status.done(data);\n    });\n  }).catch(() => {\n    status.done(void 0, defaultError);\n  });\n};\nvar fetchAPIModule = {\n  prepare,\n  send\n};\n\n// src/icon/sort.ts\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n// src/api/callbacks.ts\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nvar idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\n// src/icon/list.ts\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done, success) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError = void 0;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.abort) {\n        item.abort();\n      }\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue = queue.filter((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n      if (item.abort) {\n        item.abort();\n      }\n      return false;\n    });\n  }\n  function moduleResponse(item, data, error) {\n    const isError = data === void 0;\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (isError) {\n      if (error !== void 0) {\n        lastError = error;\n      }\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (success && !config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        success(index);\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        const timeout2 = typeof config.timeout === \"function\" ? config.timeout(startTime) : config.timeout;\n        if (timeout2) {\n          timer = setTimeout(() => {\n            resetTimer();\n            if (status === \"pending\") {\n              clearQueue();\n              failQuery();\n            }\n          }, timeout2);\n          return;\n        }\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      getQueryStatus,\n      status: \"pending\",\n      resource,\n      done: (data, error) => {\n        moduleResponse(item, data, error);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    const timeout = typeof config.rotate === \"function\" ? config.rotate(queriesSent, startTime) : config.rotate;\n    timer = setTimeout(execNext, timeout);\n    query(resource, payload, item);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    }, (newIndex) => {\n      config.index = newIndex;\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\n// src/api/query.ts\nfunction emptyCallback$1() {\n}\nvar redundancyCache = Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\n// src/cache.ts\nvar cache = {};\n\n// src/api/icons.ts\nfunction emptyCallback() {\n}\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nvar errorsCache = Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\n// src/browser-storage/index.ts\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\nvar _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {\n  }\n}\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\n// src/browser-storage/functions.ts\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\n// src/customisations/shorthand.ts\nvar separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n// src/customisations/rotate.ts\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : defaults;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    const id = props.id;\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: replaceIDs(item.body, id ? () => id + '-' + localCounter++ : 'iconify-react-'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: fullIcon(icon),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon,\n                    abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcons, replaceIDs };\n"],"sourceRoot":""}
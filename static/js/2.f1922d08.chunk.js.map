{"version":3,"sources":["../node_modules/@iconify/react/dist/iconify.mjs"],"names":["matchName$1","iconDefaults$1","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon$1","data","validateIcon$1","icon","allowSimpleName","provider","match","prefix","name","matchName","iconDefaults","fullIcon","getIconData$1","full","result","getIcon","name2","iteration","_a","_b","_c","_d","icons","assign","aliases","item","result2","parent","alias","key","prop","value","mergeIconData","chars","matchChar","validateIconProps","fix","attr","type","parseIconSet","callback","options","names","validate","obj","Error","keys","forEach","body","length","validateAlias","validatedAliases","has","failedAliases","add","Set","expectedType","actualType","char","target","validateIconSet","err","not_found","Array","push","iconData","parseAliases","isVariation","stringToIcon","colonSeparated","split","slice","shift","pop","validateIcon","dashSeparated","join","storage$1","create","w","window","self","_iconifyStorage","version","storage","getStorage","providerStorage","missing","newStorage","addIconSet","storage2","t","Date","now","getIconFromStorage","simpleNames","allowSimpleNames","allow","getIconData","addIcon","addIconToStorage","inline","hAlign","vAlign","regex","randomPrefix","toString","Math","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","unitsSplit","unitsTest","calculateSize","size","ratio","precision","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","concat","mergeParams","base","params","hasParams","indexOf","encodeURIComponent","paramToString","maxLengthCache","pathCache","fetchModule","fetch","chunk","String","fromCharCode","req","global","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","cacheKey","calculateMaxLength","send","status","done","getPath","iconsList","uri","defaultError","then","response","json","setTimeout","catch","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","idCounter","defaultConfig","sendQuery","payload","query","success","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","execNext","resource","timeout2","error","isError","queued","moduleResponse","initRedundancy","cfg","newConfig","setConfig","queries","cleanup","queryCallback","doneCallback","query2","newIndex","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","redundancy","api","cached","cachedReundancy","getRedundancyCache","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","providerPendingUpdates","hasPending","oldLength","pending","loaded","updateCallbacks","errorsCache","loadNewIcons","providerIconsToLoad","providerQueueFlags","providerPendingIcons","sort","icons2","time","console","parsed","store","err2","loadIcons","cleanedIcons","listToIcons","sortedIcons","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingSources","bind","storeCallback","cacheVersion","cachePrefix","countKey","versionKey","hour","local","session","count","emptyList","_window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","loadCache","minTime","load","func","valid","JSON","parse","removeItem","i","destroyCache","initCache","defaults","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","preserveAspectRatio","props","svgDefaults","inlineDefaults","render","ref","defaultProps","customisations","defaults2","mergeCustomisations","style","componentProps","color","box","transformations","tempValue","rotation","unshift","attributes","viewBox","iconToSVG","localCounter","dangerouslySetInnerHTML","__html","verticalAlign","React","createElement","document","stringify","IconifyPreload","preload","added","addCollection","e","IconifyProviders","providers","IconComponent","Component","constructor","super","this","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","stringToIcon$1","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon","forwardRef"],"mappings":"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","file":"static/js/2.f1922d08.chunk.js","sourcesContent":["import React from 'react';\n\n// src/icon/index.ts\nvar matchName$1 = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults$1 = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon$1(data) {\n  return { ...iconDefaults$1, ...data };\n}\n\n// src/icon/name.ts\nvar stringToIcon$1 = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon$1(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon$1(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon$1(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon$1 = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName$1)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName$1)) && icon.name.match(matchName$1));\n};\n\n// src/icon/index.ts\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\n// src/icon/merge.ts\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\n// src/icon-set/get-icon.ts\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\n// src/icon-set/validate.ts\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  const fix = !!(options == null ? void 0 : options.fix);\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (!Object.keys(data.icons).length) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      var _a;\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && ((_a = data.aliases) == null ? void 0 : _a[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\n// src/icon-set/parse.ts\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\n// src/icon/name.ts\nvar stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\n// src/storage/storage.ts\nvar storageVersion = 1;\nvar storage$1 = Object.create(null);\ntry {\n  const w = window || self;\n  if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\n// src/storage/functions.ts\nvar simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\n// src/customisations/index.ts\nvar defaults$1 = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations$1(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/svg/size.ts\nvar unitsSplit$1 = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest$1 = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize$1(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit$1);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest$1.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio$1(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG$1(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize$1(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize$1(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize$1(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio$1(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n// src/builder/functions.ts\nfunction buildIcon(icon, customisations) {\n  return iconToSVG$1(fullIcon(icon), customisations ? mergeCustomisations$1(defaults$1, customisations) : defaults$1);\n}\n\n// src/svg/id.ts\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nvar counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\n// src/svg/size.ts\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/api/modules.ts\nvar storage = Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n// src/api/config.ts\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nvar fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\n// src/api/params.ts\nvar mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\n// src/api/modules/fetch.ts\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\nvar detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  try {\n    const chunk = String.fromCharCode(114) + String.fromCharCode(101);\n    const req = global[chunk + \"qui\" + chunk];\n    callback = req(\"cross-fetch\");\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nvar fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nvar send = (host, params, status) => {\n  if (!fetchModule) {\n    status.done(void 0, 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      status.done(void 0, 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    if (response.status !== 200) {\n      setTimeout(() => {\n        status.done(void 0, response.status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        status.done(void 0, defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      status.done(data);\n    });\n  }).catch(() => {\n    status.done(void 0, defaultError);\n  });\n};\nvar fetchAPIModule = {\n  prepare,\n  send\n};\n\n// src/icon/sort.ts\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n// src/api/callbacks.ts\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nvar idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\n// src/icon/list.ts\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done, success) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError = void 0;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.abort) {\n        item.abort();\n      }\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue = queue.filter((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n      if (item.abort) {\n        item.abort();\n      }\n      return false;\n    });\n  }\n  function moduleResponse(item, data, error) {\n    const isError = data === void 0;\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (isError) {\n      if (error !== void 0) {\n        lastError = error;\n      }\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (success && !config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        success(index);\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        const timeout2 = typeof config.timeout === \"function\" ? config.timeout(startTime) : config.timeout;\n        if (timeout2) {\n          timer = setTimeout(() => {\n            resetTimer();\n            if (status === \"pending\") {\n              clearQueue();\n              failQuery();\n            }\n          }, timeout2);\n          return;\n        }\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      getQueryStatus,\n      status: \"pending\",\n      resource,\n      done: (data, error) => {\n        moduleResponse(item, data, error);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    const timeout = typeof config.rotate === \"function\" ? config.rotate(queriesSent, startTime) : config.rotate;\n    timer = setTimeout(execNext, timeout);\n    query(resource, payload, item);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    }, (newIndex) => {\n      config.index = newIndex;\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\n// src/api/query.ts\nfunction emptyCallback$1() {\n}\nvar redundancyCache = Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\n// src/cache.ts\nvar cache = {};\n\n// src/api/icons.ts\nfunction emptyCallback() {\n}\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nvar errorsCache = Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nvar iconsQueue = Object.create(null);\nvar loadIcon = (icon) => {\n  if (typeof icon === \"string\" && iconsQueue[icon]) {\n    return iconsQueue[icon];\n  }\n  const result = new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n  if (typeof icon === \"string\") {\n    iconsQueue[icon] = result;\n  }\n  return result;\n};\n\n// src/browser-storage/index.ts\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\nvar _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {\n  }\n}\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\n// src/browser-storage/functions.ts\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\n// src/customisations/index.ts\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/customisations/shorthand.ts\nvar separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n// src/customisations/rotate.ts\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : defaults;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: fullIcon$1(icon),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon$1(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon,\n                    abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };\n"],"sourceRoot":""}